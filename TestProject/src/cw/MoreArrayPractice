package cw;

import java.util.Arrays;

public class MoreArrayPractice{

	public static void commonNumbers(int[] arr, int[] arr2) {
		
		for (int i = 0; i < arr.length; i++) {
			
			for (int j = 0; j < arr2.length; j++) {
				
				if (arr[i] == arr2[j]) 
					
					System.out.println(arr[i]);	
			
			}
				
		}
					
	}
	
	public static void uniqueNumbers(int[]arr) {
		
		for (int i = 0; i < arr.length; i ++) {
				
			boolean duplicateFound = false;
				
			for (int j = i+1; j< arr.length; j++) {
					
				if (arr[j] == arr[i]) {
						duplicateFound = true;
						
				}
					
			}
				
				if (!duplicateFound) {
					System.out.println(arr[i]);
					
				}
				
		}
			
	}
	
	
	public static int[] digitsArray(int num) {
	
		int[] arr = new int[(int)(Math.log(num)/Math.log(10)+1)];
		
		//int[]arr = new int [String.valueOf(num).length()];
		
		for (int i = arr.length-1; i >= 0; i--) {
			
			arr[i] = num % 10;
			num /= 10;
			
		}
		
		return arr;
		
	}
	
	//Create a method that takes an array of integers as parameter. 
	//Your method should return a new array that contains all the same numbers as the parameter, 
	//but without any duplicates. 
    //example: [5,3,5,7,2,3]  would give  [5,3,7,2]
	
	public static void nonDuplicateArray(int[] arr) {
				
		int[] arr2 = new int[arr.length];
		int k = 0;
		boolean r = false;
		
		for (int i = 0; i< arr.length; i++) {
			
			for (int j = 0; j < arr2.length; j++) {
				
				if (arr[i] == arr2[j]) {
					
					r = true;
				}
				
			}
		
			if (!r) {
				
				arr2[k] = arr[i];
				k++;
			
			}
			
			r = false;
		
		}	
		
		
		for (int i = 0; i< arr.length; i++) {
			
			System.out.println(arr2[i]);
			
		}
		
			
	}
		
	
	public static void main(String[] args){
	
		//commonNumbers(new int[] {4, 1, 7, 3, 4}, new int[] {8, 2, 3, 4}); 
		//uniqueNumbers(new int[] {6, 6, 3, 9, 4, 3, 2});
		//System.out.println(Arrays.toString(digitsArray(39564)));
		
		nonDuplicateArray(new int[] {5,3,5,7,2,3});
		
		}
	
}
